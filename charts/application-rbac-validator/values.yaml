# Default values for application-rbac-validator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Configuration for the controller manager.
controllerManager:
  # -- Manager-specific settings within the controller.
  manager:
    # -- Command-line arguments passed to the manager container.
    args:
      - --leader-elect
      - --health-probe-bind-address=:8081
    # -- Container security context for the manager container.
    containerSecurityContext:
      # -- Specifies whether a process can gain more privileges than its parent.
      allowPrivilegeEscalation: false
      # -- Capabilities to drop from the container. Dropping ALL removes all default capabilities.
      capabilities:
        drop:
          - ALL
    # -- Image configuration for the manager container.
    image:
      # -- The repository of the manager container image.
      repository: controller
      # -- The tag of the manager container image.
      tag: latest
    # -- Resource requests and limits for the manager container.
    resources:
      # -- CPU and memory limits for the manager container.
      limits:
        cpu: 500m
        memory: 128Mi
      # -- CPU and memory requests for the manager container.
      requests:
        cpu: 10m
        memory: 64Mi
  # -- The number of replicas for the controller manager deployment.
  replicas: 1
  # -- Service account configuration for the controller manager.
  serviceAccount:
    # -- Annotations to add to the service account.
    annotations: {}

# -- The Kubernetes cluster domain. Defaults to 'cluster.local'.
kubernetesClusterDomain: cluster.local

# -- Configuration for the metrics service.
metricsService:
  # -- List of ports to expose for the metrics service.
  ports:
    - # -- The name of the port.
      name: https
      # -- The port number exposed by the service.
      port: 8443
      # -- The protocol used by the port (e.g., TCP, UDP, SCTP).
      protocol: TCP
      # -- The target port on the pods to which the service sends traffic.
      targetPort: 8443
  # -- The type of service (e.g., ClusterIP, NodePort, LoadBalancer).
  type: ClusterIP

# -- Configuration for the webhook service.
webhookService:
  # -- List of ports to expose for the webhook service.
  ports:
    - # -- The port number exposed by the service.
      port: 443
      # -- The protocol used by the port (e.g., TCP, UDP, SCTP).
      protocol: TCP
      # -- The target port on the pods to which the service sends traffic.
      targetPort: 9443
  # -- The type of service (e.g., ClusterIP, NodePort, LoadBalancer).
  type: ClusterIP

# -- Configuration for the webhook.
webhook:
  # -- Namespace selector configuration for the validating webhook.
  namespaceSelector: {}
  # Examples:
  # namespaceSelector:
  #   matchLabels:
  #     environment: production
  # namespaceSelector:
  #   matchExpressions:
  #   - key: environment
  #     operator: In
  #     values: ["production", "staging"]
  # namespaceSelector:
  #   matchExpressions:
  #   - key: kubernetes.io/metadata.name
  #     operator: NotIn
  #     values: ["kube-system", "kube-public"]